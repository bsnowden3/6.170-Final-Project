{"remainingRequest":"/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/src/components/CreateShortForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/src/components/CreateShortForm.vue","mtime":1538071819624},{"path":"/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/node_modules/cache-loader/dist/cjs.js","mtime":1538071850001},{"path":"/Users/Pteek/Desktop/6.170/finalproject/url-shortner-starter-code2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\n// eslint-disable-next-line\r\nimport { eventBus } from \"../main\";\r\n\r\nexport default {\r\n  name: \"CreateShortForm\",\r\n\r\n  data() {\r\n    return {\r\n      errors: [],\r\n      success: \"\",\r\n      name: \"\",\r\n      url: \"\"\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    createShort: function() {\r\n      this.errors = [];\r\n\r\n      if (this.name === \"\" || this.url === \"\") {\r\n        if (this.name === \"\") {\r\n          this.errors.push(\"Short name is required\");\r\n        }\r\n\r\n        if (this.url === \"\") {\r\n          this.errors.push(\"URL is required\");\r\n        }\r\n      } else {\r\n        const bodyContent = { name: this.name, url: this.url };\r\n        axios\r\n          .post(\"/api/shorts\", bodyContent)\r\n          .then(() => {\r\n            // handle success\r\n            this.success = \"Short created successfully!\";\r\n            \r\n            // TODO: Step 4 - Emit Success Event\r\n\r\n          })\r\n          .catch(err => {\r\n            // handle error\r\n            this.errors.push(err);\r\n          })\r\n          .then(() => {\r\n            // always executed\r\n            this.resetForm();\r\n            this.clearMessages();\r\n          });\r\n      }\r\n    },\r\n\r\n    resetForm: function() {\r\n      this.name = \"\";\r\n      this.url = \"\";\r\n    },\r\n\r\n    clearMessages: function() {\r\n      setInterval(() => {\r\n        this.errors = [];\r\n        this.success = \"\";\r\n      }, 5000);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["CreateShortForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateShortForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<!-- the submit event will no longer reload the page -->\r\n  <form class='component' v-on:submit.prevent='createShort' method=\"post\">\r\n    <h3>Create Short URL</h3>\r\n\r\n    <div class='form-group'>\r\n      <label for='name'>Short Name:</label>\r\n      <input id='name' v-model.trim='name' type='text' name='name'>\r\n    </div>\r\n\r\n    <div class='form-group'>\r\n      <label for='url'>URL:</label>\r\n      <input id='url' v-model.trim='url' type='url' name='url'>\r\n    </div>\r\n\r\n    <input type='submit' value='Shorten URL'>\r\n\r\n    <div v-if='success' class=\"success-message\">\r\n      {{ success }}\r\n    </div>\r\n\r\n    <div v-if='errors.length' class=\"error-message\">\r\n      <b>Please correct the following error(s):</b>\r\n      <ul>\r\n        <li v-for='error in errors' v-bind:key='error.id'>{{ error }}</li>\r\n      </ul>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// eslint-disable-next-line\r\nimport { eventBus } from \"../main\";\r\n\r\nexport default {\r\n  name: \"CreateShortForm\",\r\n\r\n  data() {\r\n    return {\r\n      errors: [],\r\n      success: \"\",\r\n      name: \"\",\r\n      url: \"\"\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    createShort: function() {\r\n      this.errors = [];\r\n\r\n      if (this.name === \"\" || this.url === \"\") {\r\n        if (this.name === \"\") {\r\n          this.errors.push(\"Short name is required\");\r\n        }\r\n\r\n        if (this.url === \"\") {\r\n          this.errors.push(\"URL is required\");\r\n        }\r\n      } else {\r\n        const bodyContent = { name: this.name, url: this.url };\r\n        axios\r\n          .post(\"/api/shorts\", bodyContent)\r\n          .then(() => {\r\n            // handle success\r\n            this.success = \"Short created successfully!\";\r\n            \r\n            // TODO: Step 4 - Emit Success Event\r\n\r\n          })\r\n          .catch(err => {\r\n            // handle error\r\n            this.errors.push(err);\r\n          })\r\n          .then(() => {\r\n            // always executed\r\n            this.resetForm();\r\n            this.clearMessages();\r\n          });\r\n      }\r\n    },\r\n\r\n    resetForm: function() {\r\n      this.name = \"\";\r\n      this.url = \"\";\r\n    },\r\n\r\n    clearMessages: function() {\r\n      setInterval(() => {\r\n        this.errors = [];\r\n        this.success = \"\";\r\n      }, 5000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .form-group {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  label {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  form {\r\n    width: fit-content;\r\n  }\r\n\r\n  input[type='text'], input[type='url'] {\r\n    width: 15rem;\r\n  }\r\n\r\n  form > * {\r\n    margin-bottom: 1rem;\r\n  }\r\n</style>\r\n"]}]}